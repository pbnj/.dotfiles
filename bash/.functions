# vim:ft=bash:
# shellcheck shell=bash

ly() {
	lynx -useragent='Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)' $*
}

########################################
# Kubernetes
########################################

kash() {
	docker run --rm -it --volume="${HOME}/.kube/configs:/.kube/configs" --workdir=/.kube/configs --entrypoint=/bin/bash bitnami/kubectl:latest
}

# prompt for kubeconfig + namespace
kcfg() {
	local kubeconfig
	kubeconfig="$(find "${HOME}/.kube/configs" -type f | fzf --height=20)"

	if [[ -n "${kubeconfig}" ]]; then
		export KUBECONFIG="${kubeconfig}"
	fi
}
kns() {
	local kubenamespace
	kubenamespace="$(kubectl get ns -o name | cut -d '/' -f 2 | fzf --height=20)"
	if [[ -n "${kubenamespace}" ]]; then
		export KUBENS="${kubenamespace}"
	fi
}

########################################
# Custom FZF Completions
########################################

# gw <tab>
_fzf_complete_gw() {
	_fzf_complete --reverse --prompt="gw> " -- "$@" < <(yq '. | keys' ~/.config/gw/config.yaml | grep -v '#' | tr -d '[- ]')
}
complete -o default -o bashdefault -F _fzf_complete_gw gw

# aws-console **<tab>
_fzf_complete_awsconsole() {
	_fzf_complete --reverse --prompt="aws console> " -- "$@" < <(awk -F '[][]' '$2 ~ "profile" {print $2}' ~/.aws/config | awk '{print $2}')
}
complete -o default -o bashdefault -F _fzf_complete_awsconsole aws-console
