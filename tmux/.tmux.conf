# SENSIBLE

set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'
set-option -g base-index 1
set-option -g history-limit 20000
set-option -g mode-keys vi
set-option -g mouse on
set-option -g pane-base-index 1
set-option -g renumber-windows on
set-option -g set-clipboard on
set-option -g status on
set-option -g status-interval 1
set-option -g status-left ''
set-option -g status-position top
set-option -g status-right '#{?client_prefix,#[reverse][prefix]#[noreverse],} #(tmux-mem-cpu-load)'
set-option -g status-right-length 200
set-option -g status-style 'bg=default'
set-option -g window-status-current-format "[#[bold]#W #[nobold]#(git -C #{pane_current_path} prompt)#[default]]"
set-option -g window-status-format '[#I]'
set-option -g wrap-search off
set-option -s escape-time 0

if-shell '[[ $(uname -s) == Darwin ]]' { set -s copy-command 'pbcopy' }

###############################################################################
# KEYBINDINGS
###############################################################################

# https://gist.github.com/brendanhay/1769870#gistcomment-2334245
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T edit-mode-vi Down send-keys -X history-down
bind-key -T edit-mode-vi Up send-keys -X history-up
bind-key C-[ copy-mode
bind-key / copy-mode \; send-key / # prefix + / to search down

# [u]rl fuzzy searcher & opener
bind-key C-u run-shell -b 'open-url'
# project fuzzy finder & open them in vim
# See vim/.vim/vimrc for `:Projects` command definition
bind-key C-c run-shell -b "tmux new-window vim +Projects!"
bind-key C-w run-shell -b "tmux split-window vim +Projects!"
# [r]ipgrep fuzzy search using vim-fzf plugin
bind-key C-r run-shell -b "tmux split-window -c ~/Projects vim +Rg!"

# [g]it file fuzzy finder & open in the browser at the corret remote/branch & line number/range.
# See `utils/.local/bin/git-browse-fzf` companion script
bind-key C-g run-shell -b 'git -C #{pane_current_path} browse-fzf'

# h[t]op launcher
bind-key C-t run-shell -b 'tmux split-window -h htop'

########################################
# WINDOW/PANE CONTROLS
# https://github.com/tmux-plugins/tmux-pain-control/blob/master/pain_control.tmux
########################################

# Windows
## Nav
bind-key '<' swap-window -t -1
bind-key '>' swap-window -t +1
bind-key 'c' new-window -c '#{pane_current_path}'
bind-key C-n select-window -n
bind-key C-p select-window -p

## Spliting
bind-key 'v' split-window -h -c '#{pane_current_path}'   # <prefix>b + v : split horizontal
bind-key "\\" split-window -h -c '#{pane_current_path}'  # <prefix>b + \ : split horizontal
bind-key 'V' split-window -fh -c '#{pane_current_path}'  # <prefix>b + V : split full horizontal
bind-key '|' split-window -fh -c '#{pane_current_path}'  # <prefix>b + | : split full horizontal
bind-key 's' split-window -v -c '#{pane_current_path}'   # <prefix>b + s : split vertical
bind-key '-' split-window -v -c '#{pane_current_path}'   # <prefix>b + - : split vertical
bind-key 'S' split-window -fv -c '#{pane_current_path}'  # <prefix>b + S : split full vertical
bind-key '_' split-window -fv -c '#{pane_current_path}'  # <prefix>b + _ : split full vertical
bind-key '%' split-window -h -c '#{pane_current_path}'   # <prefix>b + % : default split horizontal
bind-key "'" split-window -v -c '#{pane_current_path}'   # <prefix>b + " : default split vertical

# Panes
## Nav
bind-key C-h select-pane -L
bind-key C-j select-pane -D
bind-key C-k select-pane -U
bind-key C-l select-pane -R
unbind C-o ## pane rotation is annoying
bind C-o select-pane -t :.+
